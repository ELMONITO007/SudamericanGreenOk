<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}



<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
     <link href="~/Content/modern-business.css" rel="stylesheet" />
</head>
<body>
<#
    PushIndent("    ");
}
#>
<div id="content-wrapper" class="d-flex flex-column">
  <!-- Main Content -->
    <div id="content">

      <!-- Begin Page Content -->
        <div class="container-fluid">
         <div class="card shadow mb-4">
              <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Lista de </h6>
              </div>
              <div class="card-body"> 
                 <div class="table-responsive">
                   <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                         <div class="col-sm-12">
                <table  class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;" >   
                  <thead>

                <tr  role="row">
                 <th class="sorting_asc" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Name: activate to sort column descending" style="width: 103px;"> </th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;

foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>  <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 162px;">@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</th>
       
<#
    }
}
#>
         <th class="sorting" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Position: activate to sort column ascending" style="width: 162px;">Acciones</th>
    </tr>
     </thead>
       <tbody>
@foreach (var item in Model) {
    <tr role="row" class="odd">
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td class="sorting_1">
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
            @Html.ActionLink("Editar", "Edit", new { id=item.<#= pkName #> }) |
            @Html.ActionLink("Detalles", "Details", new { id=item.<#= pkName #> }) |
            @Html.ActionLink("Eliminar", "Delete", new { id=item.<#= pkName #> })
        </td>
<#
} else {
#>
        <td>
            @Html.ActionLink("Editar", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Detalles", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Eliminar", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
<#
}
#>
    </tr>
}
</tbody>
</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>
              </div>
                </div>
             </div>
               <input type="button" class="btn btn-outline-primary " style="float:right" value="Crear" onclick="location.href='@Url.Action("create", "")'" />
          
         </div>
        </div>
       </div>
      </div>
     </div>